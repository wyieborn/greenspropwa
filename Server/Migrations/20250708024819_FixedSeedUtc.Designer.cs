// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace GreensProPWA.Server.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250708024819_FixedSeedUtc")]
    partial class FixedSeedUtc
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.35")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("GreensProPWA.Shared.Entity.Event", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Events");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Date = new DateTime(2025, 7, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Welcome event for all staffs.",
                            Location = "Main Hall",
                            Title = "Opening Ceremony"
                        },
                        new
                        {
                            Id = 2,
                            Date = new DateTime(2025, 7, 14, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Fun and food with friends and family.",
                            Location = "Club Lawn",
                            Title = "Summer BBQ"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
