@page "/admin/trainings"
@using GreensProPWA.Shared.Entity
@inject HttpClient Http

<div class="max-w-6xl mx-auto px-4 py-6">
    <div class="flex justify-between items-center mb-4">
        <h2 class="text-3xl font-semibold text-gray-800">Staff Training Records</h2>
        <NavLink href="/training-record" class="bg-green-600 hover:bg-green-700 text-white px-4 py-2 rounded shadow transition">
            ➕ Add Training
        </NavLink>
    </div>

    @if (trainings == null)
    {
        <p class="text-gray-500">Loading trainings...</p>
    }
    else if (!trainings.Any())
    {
        <p class="text-red-500">No training records found.</p>
    }
    else
    {
        <div class="overflow-x-auto shadow-lg rounded-lg border border-gray-200">
            <table class="min-w-full bg-white">
                <thead class="bg-indigo-600 text-white">
                    <tr>
                        <th class="text-left px-4 py-2 font-medium">#</th>
                        <th class="text-left px-4 py-2 font-medium">Staff Name</th>
                        <th class="text-left px-4 py-2 font-medium">Training Date</th>
                        <th class="text-left px-4 py-2 font-medium">Equipment</th>
                        <th class="text-left px-4 py-2 font-medium">Trainer</th>
                    </tr>
                </thead>
                <tbody class="text-gray-700">
                    @foreach (var t in trainings)
                    {
                        <tr class="hover:bg-gray-100 border-t border-gray-200">
                            <td class="px-4 py-2">@t.Id</td>
                            <td class="px-4 py-2">@t.StaffName</td>
                            <td class="px-4 py-2">@t.TrainingDate.ToLocalTime().ToString("g")</td>
                            <td class="px-4 py-2">@t.EquipmentTrainedOn</td>
                            <td class="px-4 py-2">@t.TrainerName</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
</div>

@code {
    private List<Training> trainings;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            trainings = await Http.GetFromJsonAsync<List<Training>>("api/trainings");
        }
        catch (Exception ex)
        {
            Console.Error.WriteLine($"Error loading trainings: {ex.Message}");
            trainings = new List<Training>();
        }
    }
}
